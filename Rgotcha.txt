
# to install packages in R
install.packages("ggplot2")

#to activate package

library(ggplot2)

#to get help type ?

?qplot()

#new comment

#vecors are of same data type, you cannot mix them

c()
seq()
rep()
is.Numeric()
rnorm()

# if you - inside the [] ,that index is excluded

#how to create matrices

matrix()
rbind() #bind by row
cbind() #bind by col

#sample to create matrix

my.data<- 1:20
B <- matrix(my.data,4,5,byrow =T)
B[2,5]

t() # to transpose a matrix

make sure to keep same legengs, color and pch for legends()

matplot(t(FieldGoals/Games),type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft",inset= 0.01,legend= Players, col=c(1:4,6),pch=15:18,horiz =F)


pass drop=F inside[] to convert it matrix subset to matrix always  other wise you might end up getting a vector

Games[1:3,6:10]
Games[c(1,10),c("2008","2011")]
Games[,c(6:10)]
Games[1,,drop=T]
Games[1,5,drop=F]
Games[1,2]
is.matrix(Games[1,2,drop=F])
is.vector(Games[1,2,drop=F])


#matrix is for same data type , data frame can hold any data type
myPlot <- function(data,rows=1:10){

  Data <- data[rows,,drop=F]
  matplot(t(Data),type ="b",pch=15:18, col=c(1:4,6))
  legend("bottomleft",inset=0.01,pch=15:18, col=c(1:4,6),legend=Players[rows])

}


#method  :1 Read the file manually

stats <- read.csv(file.choose())
stats


setwd() and getwd () to get the current working directory and to switch

#Imported so many rows using nrow and ncol
nrow(stats)
ncol(stats)

# top 6 row from the file
head(stats)

#bottom 6 of the file
tail(stats)


#str() to get the structre of the data
#runif() random  variables distrubted uniformly
#rnorm()

#summary vs stats
$ sign is used to extra data from data frame
stats$Internet.users[22]
vs
stats[3,3]
to get the common levels inside the column
levels(stats$Income.Group)


# to add a column
dataname$mynewcol <- vector or data frame

# To get rid of column
stats$xyz <- NULL
